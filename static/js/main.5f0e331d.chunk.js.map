{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","FilterTodosTypes","actions","todo","type","payload","currentTodoReducer","state","action","status","SET_STATUS","query","SET_QUERY","initialState","ALL","filterReducer","SET_TODOS","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","selectedTodo","preparedTodos","newTodos","trim","normalQuery","toLowerCase","title","includes","ACTIVE","completed","COMPLETED","getNormalisedTodos","dispatch","className","map","id","cn","onClick","TodoFilter","value","onChange","event","target","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","data","catch","error","href","email","name","App","loading","setLoading","finally","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f0e331d.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  COMPLETED = 'completed',\n  ACTIVE = 'active',\n}\n\nexport enum FilterTodosTypes {\n  SET_STATUS = 'filter/SET_STATUS',\n  SET_QUERY = 'filter/SET_QUERY',\n}\n\nexport type SetStatus = {\n  type: FilterTodosTypes.SET_STATUS,\n  payload: Status,\n};\n\nexport type SetQuery = {\n  type: FilterTodosTypes.SET_QUERY,\n  payload: string\n};\n\nexport type FilterState = {\n  query: string,\n  status: Status,\n};\n\nexport type Action = SetStatus | SetQuery;\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import {\n  FilterState, FilterTodosTypes, Status, Action,\n} from '../types/Status';\n\nconst setStatus = (status: Status): Action => {\n  return {\n    type: FilterTodosTypes.SET_STATUS,\n    payload: status,\n  };\n};\n\nconst setQuery = (query: string): Action => {\n  return {\n    type: FilterTodosTypes.SET_QUERY,\n    payload: query,\n  };\n};\n\nexport const actions = { setStatus, setQuery };\n\nconst initialState: FilterState = {\n  query: '',\n  status: Status.ALL,\n};\n\nconst filterReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case FilterTodosTypes.SET_STATUS:\n      return {\n        ...state,\n        status: action.payload,\n      };\n    case FilterTodosTypes.SET_QUERY:\n      return {\n        ...state,\n        query: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\nconst SET_TODOS = 'todos/SET';\n\ntype SetTodos = {\n  type: typeof SET_TODOS,\n  payload: Todo[],\n};\n\nconst setTodos = (todos: Todo[]): SetTodos => ({\n  type: SET_TODOS,\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\ntype Action = SetTodos;\n\nconst todosReducer = (state: Todo[] = [], action: Action): Todo[] => {\n  switch (action.type) {\n    case SET_TODOS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport cn from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { Status } from '../../types/Status';\nimport { actions } from '../../features/currentTodo';\n\nfunction getNormalisedTodos(todos: Todo[], query: string, filter: Status): Todo[] {\n  let newTodos = todos;\n\n  if (query.trim()) {\n    const normalQuery = query.trim().toLowerCase();\n\n    newTodos = todos.filter(\n      todo => todo.title.toLowerCase().includes(normalQuery),\n    );\n  }\n\n  switch (filter) {\n    case Status.ACTIVE:\n      return newTodos.filter(todo => !todo.completed);\n    case Status.COMPLETED:\n      return newTodos.filter(todo => todo.completed);\n    default:\n      return newTodos;\n  }\n}\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const { query, status } = useAppSelector(state => state.filter);\n  const preparedTodos = getNormalisedTodos(todos, query, status);\n  const dispatch = useAppDispatch();\n\n  const currentTodo = (todo: Todo) => {\n    dispatch(actions.setTodo(todo));\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {preparedTodos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  currentTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye-slash': selectedTodo?.id === todo.id,\n                    'fa-eye': selectedTodo?.id !== todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const { query, status } = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={event => dispatch(actions.setStatus(\n              event.target.value as Status,\n            ))}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={query}\n          onChange={event => dispatch(actions.setQuery(event.target.value))}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query.length !== 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={() => {\n                dispatch(actions.setQuery(''));\n              }}\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch } from '../../app/hooks';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ntype TodoModalProps = {\n  todo: Todo;\n};\n\nexport const TodoModal: React.FC<TodoModalProps> = ({ todo }) => {\n  const dispatch = useAppDispatch();\n\n  const [user, setUser] = useState<User | null>(null);\n\n  const onReset = () => {\n    dispatch(actions.removeTodo());\n  };\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(data => {\n        setUser(data);\n      })\n      .catch(error => {\n        throw error;\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              { todo?.id }\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={onReset}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const todo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(data => {\n        dispatch(actions.setTodos(data));\n      })\n      .catch(error => {\n        throw error;\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading ? (\n                <Loader />\n              ) : (\n                <TodoList />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {todo && (\n        <TodoModal todo={todo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}